spring:
  application:
    name: concert

  # H2 Database 설정
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:concert;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE  # H2 메모리 DB
    username: sa       # 기본 사용자명
    password:          # 기본 비밀번호 (빈 값)

  # JPA 설정
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create            # DB 초기화 전략 (update, none, create, create-drop, validate)
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
    #      format_sql: true          # 쿼리 로그 포맷 (정렬)
    #      show_sql: true            # 쿼리 로그 출력


  # 카프카 설정
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      enable-idempotence: true
    consumer:
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      group-id: reservation-confirm-group
      enable-auto-commit: false
    listener:
      concurrency: 2
      poll-timeout: 20000

springdoc:
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  swagger-ui:
    path: /concert-swagger/
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha
  paths-to-match: /**
  api-docs:
    path: /concert-swagger/v3/api-docs

logging:
  level:
    org.hibernate.type.descriptor.sql.BasicBinder: trace
version: '3'
services:
  app:
    build:
      context: .
    ports:
      - "8080:8080"
    container_name: "backend"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    environment:
      - SPRING_PROFILES_ACTIVE=test
    networks:
      - spring-network

  redis:
    image: redis:7.0.5
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - spring-network

  zookeeper:
    image: "wurstmeister/zookeeper"
  kafka:
    image: "wurstmeister/kafka"
    ports:
      - "9092:9092"
    depends_on:
      - "zookeeper"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_HOST_NAME: "${KAFKA_HOST:-localhost}"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

  k6:
    image: grafana/k6
    volumes:
      - ./k6s:/scripts
    command: run /scripts/stressTest.js
    networks:
      - spring-network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./docker/dashboards:/var/lib/grafana/dashboards
      - ./docker/grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./docker/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    networks:
      - spring-network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - spring-network

  influxdb:
    image: influxdb:1.8
    networks:
      - spring-network
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6

networks:
  spring-network:
